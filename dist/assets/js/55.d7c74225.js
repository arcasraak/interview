(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{248:function(t,e,a){"use strict";a.r(e);var s=a(0),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-我的了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-我的了解","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue-我的了解")]),t._v(" "),a("blockquote",[a("p",[t._v("必须知道的知识点")]),t._v(" "),a("p",[t._v("Object.defineProperty 是 ES5 无法 shim 的特性,不支持 IE8 以及更低版本浏览器。")]),t._v(" "),a("p",[t._v("订阅发布模式:")]),t._v(" "),a("p",[t._v("MVVM: 当视图发生改变的时候传递给VM,再让数据得到更新，当数据发生改变的时候传给VM,使得视图发生改变；")]),t._v(" "),a("blockquote",[a("p",[t._v("Model - 包含了业务和验证逻辑的数据模型")])]),t._v(" "),a("blockquote",[a("p",[t._v("View - 定义屏幕中View的结构，布局和外观")])]),t._v(" "),a("blockquote",[a("p",[t._v("ViewModel - 扮演“View”和“Model”之间的使者，帮忙处理 View 的全部业务逻辑")])])]),t._v(" "),a("p",[t._v("Vue 是一个 MVVM 前端框架,有三个特性:")]),t._v(" "),a("h2",{attrs:{id:"一-响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-响应式","aria-hidden":"true"}},[t._v("#")]),t._v(" 一. 响应式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原理:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Vue 将传入 JS 对象作为 Data,遍历 Data 所有属性,使用 Object.defineProperty 将属性转化为 getter/setter,进行数据劫持.")])]),t._v(" "),a("li",[a("p",[t._v("每个组件实例都对应一个 watcher 实例，它会在组件渲染的过程中把“接触”过的数据属性记录为依赖。之后当依赖项的 setter 触发时，会通知 watcher，从而使它关联的组件重新渲染。")])])])]),t._v(" "),a("li",[a("p",[t._v("三大模块:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Observer(监听器): 递归的监听对象上的所有属性，当属性改变时触发对应的 watcher")])]),t._v(" "),a("li",[a("p",[t._v("watcher(订阅者):当监听的数据值修改时，执行相应的回调函数，更新模板内容")])]),t._v(" "),a("li",[a("p",[t._v("dep(订阅者管理器)：链接 observer 和 watcher，每一个 observer 对应一个 dep,内部维护一个数组，保存与该 observer 相关的 watcher")])])])])]),t._v(" "),a("h2",{attrs:{id:"二-模板引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-模板引擎","aria-hidden":"true"}},[t._v("#")]),t._v(" 二. 模板引擎")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("虚拟 Dom")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"三-渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-渲染","aria-hidden":"true"}},[t._v("#")]),t._v(" 三. 渲染")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("生命周期")]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate")]),t._v(" "),a("li",[t._v("created")]),t._v(" "),a("li",[t._v("beforeMount")]),t._v(" "),a("li",[t._v("mounted")]),t._v(" "),a("li",[t._v("beforeUpdate")]),t._v(" "),a("li",[t._v("updated")]),t._v(" "),a("li",[t._v("activated(keep-live)")]),t._v(" "),a("li",[t._v("deactivated(keep-live)")]),t._v(" "),a("li",[t._v("beforeDestroy")]),t._v(" "),a("li",[t._v("destroyed")]),t._v(" "),a("li",[t._v("errorCaptured(2.5.0+)")])])]),t._v(" "),a("li",[a("p",[t._v("Diff 算法")])]),t._v(" "),a("li",[a("p",[t._v("异步更新队列")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Vue 在更新 DOM 时是异步执行的。只要侦听到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据变更。")])]),t._v(" "),a("li",[a("p",[t._v("如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作是非常重要的。")])]),t._v(" "),a("li",[a("p",[t._v("然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。")])]),t._v(" "),a("li",[a("p",[t._v("Vue 在内部对异步队列尝试使用原生的 Promise.then、MutationObserver 和 setImmediate，如果执行环境不支持，则会采用 setTimeout(fn, 0) 代替。")])]),t._v(" "),a("li",[a("p",[t._v("注意: 因为 $nextTick() 返回一个 Promise 对象，"),a("code",[t._v("await this.$nextTick()")]),t._v(" 语法.")])])])])]),t._v(" "),a("h2",{attrs:{id:"注意项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意项 - 数组")]),t._v(" "),a("p",[t._v("Vue 不能检测以下数组的变动:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexOfItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nvm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newLength"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("注意项 - 对象")]),t._v(" "),a("p",[t._v("Vue 不允许动态添加根级别的响应式属性, 使用 "),a("code",[t._v("Vue.set(object, propertyName, value)")]),t._v(" 方法向嵌套对象(子实例)添加响应式属性。")]),t._v(" "),a("p",[t._v("有时你可能需要为已有对象赋值多个新属性，比如使用 Object.assign() 或 _.extend()。但是，这样添加到对象上的新属性不会触发更新。在这种情况下，你应该用原对象与要混合进去的对象的属性一起创建一个新的对象。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误方式 `Object.assign(this.someObject, { a: 1, b: 2 })`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);